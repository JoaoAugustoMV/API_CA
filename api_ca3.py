# -*- coding: utf-8 -*-
"""API_CA3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1APbqVp3T3Q-HNFY4f44AraLy-O5h-HqE
"""

# pip install beautifulsoup4

import requests
import unicodedata
from bs4 import BeautifulSoup
from flask import Flask, jsonify

class EPI2:
  ca = ''

  def __init__(self, ca):
    self.ca = ca

  def retornarBrs(ca):
    url = f'https://consultaca.com/{ca}'
    soup = BeautifulSoup(requests.get(url).content) # HTML da pag
    box_result = soup.find('div',id='box_result') # Div com os dados
    brs = box_result.find_all('br')  # tag para guiar a raspagem
    return brs


  def padraoString(string):
    return unicodedata.normalize('NFD', string).encode('ascii', 'ignore').decode('utf8')

  def retornarJSON(self, ca):
    brs = self.retornarBrs(ca)
    pegarTexto = ['Situação', 'Validade', 'Razão Social', 'Site', 'N° do Laudo'] # Atributo que estão dentro de outra tag 
    ignorarCampo = ["CA's"] # Campos irrelevantes
    dicionario = {} # Dicionario 
    for br in brs[3:]:
      chave = br.previous.replace(':', '') 
      valor = br.nextSibling
      if(chave in ignorarCampo):
        continue
      if(chave in pegarTexto): 
        try:
          valor = valor.getText()
        except:
          print('')
      if ('Declaro' in br.previous): # Acabar com a raspagem
        break
      chave = self.padraoString(chave)
      valor = self.padraoString(valor)
      dicionario[chave] = valor
    return dicionario
# End class
